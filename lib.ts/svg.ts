import {createSVG, Children, Props} from './html.js';

export const a = createSVG.bind(null, "a") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["a"],
circle = createSVG.bind(null, "circle") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["circle"],
clipPath = createSVG.bind(null, "clipPath") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["clipPath"],
defs = createSVG.bind(null, "defs") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["defs"],
desc = createSVG.bind(null, "desc") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["desc"],
ellipse = createSVG.bind(null, "ellipse") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["ellipse"],
feBlend = createSVG.bind(null, "feBlend") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feBlend"],
feColorMatrix = createSVG.bind(null, "feColorMatrix") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feColorMatrix"],
feComponentTransfer = createSVG.bind(null, "feComponentTransfer") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feComponentTransfer"],
feComposite = createSVG.bind(null, "feComposite") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feComposite"],
feConvolveMatrix = createSVG.bind(null, "feConvolveMatrix") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feConvolveMatrix"],
feDiffuseLighting = createSVG.bind(null, "feDiffuseLighting") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feDiffuseLighting"],
feDisplacementMap = createSVG.bind(null, "feDisplacementMap") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feDisplacementMap"],
feDistantLight = createSVG.bind(null, "feDistantLight") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feDistantLight"],
feFlood = createSVG.bind(null, "feFlood") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feFlood"],
feFuncA = createSVG.bind(null, "feFuncA") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feFuncA"],
feFuncB = createSVG.bind(null, "feFuncB") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feFuncB"],
feFuncG = createSVG.bind(null, "feFuncG") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feFuncG"],
feFuncR = createSVG.bind(null, "feFuncR") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feFuncR"],
feGaussianBlur = createSVG.bind(null, "feGaussianBlur") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feGaussianBlur"],
feImage = createSVG.bind(null, "feImage") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feImage"],
feMerge = createSVG.bind(null, "feMerge") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feMerge"],
feMergeNode = createSVG.bind(null, "feMergeNode") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feMergeNode"],
feMorphology = createSVG.bind(null, "feMorphology") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feMorphology"],
feOffset = createSVG.bind(null, "feOffset") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feOffset"],
fePointLight = createSVG.bind(null, "fePointLight") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["fePointLight"],
feSpecularLighting = createSVG.bind(null, "feSpecularLighting") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feSpecularLighting"],
feSpotLight = createSVG.bind(null, "feSpotLight") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feSpotLight"],
feTile = createSVG.bind(null, "feTile") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feTile"],
feTurbulence = createSVG.bind(null, "feTurbulence") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["feTurbulence"],
filter = createSVG.bind(null, "filter") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["filter"],
foreignObject = createSVG.bind(null, "foreignObject") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["foreignObject"],
g = createSVG.bind(null, "g") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["g"],
image = createSVG.bind(null, "image") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["image"],
line = createSVG.bind(null, "line") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["line"],
linearGradient = createSVG.bind(null, "linearGradient") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["linearGradient"],
marker = createSVG.bind(null, "marker") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["marker"],
mask = createSVG.bind(null, "mask") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["mask"],
metadata = createSVG.bind(null, "metadata") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["metadata"],
path = createSVG.bind(null, "path") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["path"],
pattern = createSVG.bind(null, "pattern") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["pattern"],
polygon = createSVG.bind(null, "polygon") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["polygon"],
polyline = createSVG.bind(null, "polyline") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["polyline"],
radialGradient = createSVG.bind(null, "radialGradient") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["radialGradient"],
rect = createSVG.bind(null, "rect") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["rect"],
script = createSVG.bind(null, "script") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["script"],
stop = createSVG.bind(null, "stop") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["stop"],
style = createSVG.bind(null, "style") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["style"],
svg = createSVG.bind(null, "svg") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["svg"],
switche = createSVG.bind(null, "switch") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["switch"],
symbol = createSVG.bind(null, "symbol") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["symbol"],
text = createSVG.bind(null, "text") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["text"],
textPath = createSVG.bind(null, "textPath") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["textPath"],
title = createSVG.bind(null, "title") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["title"],
tspan = createSVG.bind(null, "tspan") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["tspan"],
use = createSVG.bind(null, "use") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["use"],
view = createSVG.bind(null, "view") as (properties?: Props | Children, children?: Props | Children) => SVGElementTagNameMap["view"];
